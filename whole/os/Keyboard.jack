// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int KBD;
    static Array buffer;
    /** Initializes the keyboard. */
    function void init() {
        let KBD = 24576;
        let buffer = Array.new(100);
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(KBD);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char c;
        let c = 0;
        while (c = 0) {
            let c = Keyboard.keyPressed();
        }
        while (~(Keyboard.keyPressed() = 0)) {}
        // TODO what about other non-ascii chars?
        if (~(c = String.backSpace())) {
            do Output.printChar(c);
        }
        return c;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var int ix, iy;
        var char c;
        var String s;
        do Output.printString(message);
        let ix = 0;
        let c  = Keyboard.readChar();
        while (~(c = String.newLine())) {
            if (c = String.backSpace()) {
                if (ix > 0) {
                    do Output.backSpace();
                    let ix = ix - 1;
                }
            } else {
                let buffer[ix] = c; 
                let ix = ix + 1;
            }
            let c = Keyboard.readChar();
        }

        // Create the string
        let s = String.new(ix);
        let iy = 0;
        while (iy < ix) {
            do s.appendChar(buffer[iy]);
            let iy = iy + 1;
        }
        return s;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var int i;
        var String s;
        let s = Keyboard.readLine(message);
        let i  = s.intValue();
        do s.dispose();
        return i;
    }
}
